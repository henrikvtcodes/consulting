datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @map("refreshToken")
  access_token       String? @map("accessToken")
  expires_at         Int?    @map("expiresAt")
  token_type         String? @map("tokenType")
  scope              String?
  id_token           String? @map("idToken")
  session_state      String? @map("sessionState")
  oauth_token_secret String? @map("oauthTokenSecret")
  oauth_token        String? @map("oauthToken")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  customer      Customer[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Customer {
  id       String @id @default(cuid())
  userId   String
  stripeID String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
